#!/bin/bash

source init.conf

# Set namespace
kubectl config set-context $(kubectl config current-context) --namespace=mongodb

# Create map for OM Org/Project
kubectl delete configmap my-replica-set > /dev/null 2>&1
kubectl create configmap my-replica-set \
  --from-literal="baseUrl=${opsMgrUrl}" \
  --from-literal="projectName=MyReplicaSet"  #Optional
 # --from-literal="orgId={$orgId}>" #Optional

# Create a 3 member replica set

# Create a secret for the member certs
kubectl create secret generic my-replica-set-cert \
  --from-file=my-replica-set-0-pem \
  --from-file=my-replica-set-1-pem \
  --from-file=my-replica-set-2-pem

# Create a map for the cet
kubectl create configmap ca-pem --from-file=ca-pem

sleep 5
# TLS Cert approval (if using autogenerated certs -- depricated)
kubectl certificate approve my-replica-set-0.mongodb 
kubectl certificate approve my-replica-set-1.mongodb
kubectl certificate approve my-replica-set-2.mongodb

# Create a a secret for db user credentials
kubectl delete secret dbadmin-credentials > /dev/null 2>&1
kubectl create secret generic dbadmin-credentials \
  --from-literal=name="dbAdmin" \
  --from-literal=password="${password}"

# Create the User Resource
kubectl apply -f ops-mgr-resource-database-user-conf.yaml

# List maps
kubectl get configmaps -n mongodb

# Create the DB Resource
#kubectl apply -f ops-mgr-resource-my-replica-set.yaml
#kubectl apply -f ops-mgr-resource-my-replica-set-secure.yaml
kubectl apply -f ops-mgr-resource-my-replica-set-secure-auth.yaml

# Monitor the progress
while true
do
    kubectl get mongodb/my-replica-set
    eval status=$( kubectl get mongodb/my-replica-set -o json| jq '.status.phase' )
    kubectl get mongodb/my-replica-set -o json| jq '.status.message' 
    #if [[ $status == "Pending" || $status == "Running" ]];
    if [[ $status == "Running" ]];
    then
        printf "%s\n" "$status"
        break
    fi
    sleep 10
done

exit

# Alternate way to monitor - wait for last pod in the set
while true
do
    status=$( kubectl wait --for condition=ready pod/my-replica-set-2 )
    if [[ $? == 0 ]];
    then
        printf "%s\n" "$status"
        break
    fi
    sleep 10
done
