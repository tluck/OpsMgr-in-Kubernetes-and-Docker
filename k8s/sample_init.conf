#!/bin/bash

curdir=$( pwd )
export PATH=.:$PATH:"${curdir}"/bin:"${curdir}"/certs
sed='sed -i'
[[ $( uname ) == Darwin ]] && sed='sed -i ""' # for macOS
curlOpts="-k"

# Versions
clusterType="kubernetes" # clusterType="openshift"
omName="opsmanager"
omVersion="6.0.20"
appdbVersion="6.0.12-ent"
mdbVersion="6.0.12-ent"
mongoshVersion="2.1.0"
issuerVersion="v1.13.2"

# Deployment Options
export namespace="mynamespace" # edit this to change the namespace for this deployment
export domainName="cluster.local" # default is "cluster.local"
export issuerName="myissuer" # edit this to change the certificate issuer for this deployment
tls="true" # true/false for turning TLS on/off
tlsMode="requireTLS" # "requireTLS" "preferTLS" "allowTLS"
x509="true" # authmode - default is SCRAM, x509=true adds X509 auth and tls must be true
kmip="false" # true/false enabling kmip for encryption
omBackup="true" # true/false for enable/disable OM backup services
orgName="myOrg"
omExternalName="om.${namespace}.${domainName}" # edit to provide a external DNS name for OM
# set highPerformance to true for HA scale-out environments
highPerformance="false" # set true for large scale deployments - ignored in demo mode
omReplicas="2" # ignored unless highPerformance=true, then set 2 or more for OM HA

# Exposed Service Type
# - Loadbalancer is often best since the nodes may not be accessible externally 
# - LoadBalancer mode may not work well for clusters with less than 3 worker nodes (such as docker-desktop)
# - for docker-desktop NodePort will work best
serviceType="LoadBalancer" # serviceType="NodePort"

# OpsManager Admin
user="your-email.com"
password="yourPassword1$"
firstName="firstName"
lastName="lastName"

# DB Users
dbuser="dbAdmin"
dbpassword="Mongodb1"
ldapUser="dbAdmin" # name of a db user

# LDAP settings - for Cluster/DB Users
ldapType="ldap" # ldaps enum ('ldap','ldaps', # anything other value turns ldap off)
ldapServer="openldap:389" # just hostname:port - may need to take an array of servers
ldapBindQueryUser="cn=admin,dc=example,dc=org"
ldapBindQueryPassword="adminpassword" # bindQueryPasswordSecretRef: the bind user "password" put into a secret
ldapAuthzQueryTemplate="{USER}?memberOf?base"
#ldapUserToDNMapping='[{match: "CN=mms-automation-agent,(.+),L=NY,ST=NY,C=US", substitution: "uid=mms-automation-agent,{0},dc=example,dc=org"}, {match: "(.+)", substitution:"cn={0},ou=users,dc=example,dc=org"}]'
ldapUserToDNMapping='[{match: "(.+)", substitution:"cn={0},ou=users,dc=example,dc=org"}]'
ldapCertMapName="kube-root-ca.crt" # ConfigMap containing a CA certificate that validates the LDAP server's TLS certificate.
ldapKey="ca.crt" # key containing the cert
ldapTimeoutMS=10000
ldapUserCacheInvalidationInterval=30

# LDAP settings - for Ops Manager Users
mmsldapurl="ldap://openldap:389"
mmsldapbinddn="cn=admin,dc=example,dc=org"
mmsldapbindpassword="adminpassword"
mmsldapuserbasedn="ou=users,dc=example,dc=org"
mmsldapgroupbasedn="ou=users,dc=example,dc=org"
mmsldapusersearchattribute="mail" #uid
mmsldapgroupmember="member"
mmsldapusergroup="memberOf" # deprecated
mmsldapglobalroleowner="cn=managers,ou=users,dc=example,dc=org"
mmsldapuserfirstname="cn"
mmsldapuserlastname="sn"
mmsldapuseremail="mail"
mmsusersvcclass="com.xgen.svc.mms.svc.user.UserSvcDb" # com.xgen.svc.mms.svc.user.UserSvcLdap

# Mail Relay Account
mmsemail="account@foo.com"
mmsmailhostname="smtp.relay.net"
mmsmailusername="yourname"
mmsmailpassword="yourpassword"

# defaults for OM - uncomment and set to override the defaults
#omcpu="4.00"
#ommemlim="16Gi"
#ommemreq="8Gi"
# for Backup Daemon
#bdcpu="4.00"
#bdmemlim="16Gi"
#bdmemreq="8Gi"
#bddsk="100Gi"

# Variables below are updated after deployment
